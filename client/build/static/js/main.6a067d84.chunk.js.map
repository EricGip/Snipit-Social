{"version":3,"sources":["components/GitHubLogin/gh.png","components/chatrooms/Chat/index.js","components/LandingPage/LeftSide/index.js","utils/setAuthHeader.js","actions/authActions/authActions.js","constants/index.js","components/LandingPage/RightSide/Signup.js","components/LandingPage/RightSide/Login.js","components/LandingPage/RightSide/index.js","components/LandingPage/index.js","components/GitHubLogin/index.js","components/NavBar/index.js","components/chatrooms/Messages/Message/index.js","components/chatrooms/Messages/index.js","components/chatrooms/InfoBar/index.js","components/chatrooms/Input/index.js","utils/GithubAPIS.js","store/reducer/index.js","reducers/errorReducer.js","reducers/postReducer.js","reducers/authReducer.js","reducers/profileReducer.js","reducers/index.js","store.js","components/Profile/UserCard/index.js","components/Profile/SocialCard/index.js","components/Profile/AboutCard/index.js","components/Profile/UserActions/index.js","components/Profile/index.js","actions/profileActions/profileActions.js","components/posts/Post.js","components/posts/LoadingPosts.js","components/reduxProfile/Profile.js","actions/postActions/postActions.js","components/posts/AddPost.js","components/posts/ListPost.js","components/UtilityComponents/notFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","socket","LeftSide","className","style","marginLeft","token","axios","defaults","headers","common","console","log","getCurrentUser","dispatch","get","then","res","setCurrentUser","data","type","payload","Signup","props","state","fullname","email","password","password2","errors","handleChange","bind","handleSubmit","nextProps","this","setState","e","target","name","value","preventDefault","userData","registerUser","history","classes","Form","Group","Label","data-error","data-success","Control","placeholder","onChange","Text","Button","onClick","Modal","Footer","href","Component","connect","post","push","catch","err","response","withRouter","Login","loginUser","ref","action","controlId","fontSize","auth","localStorage","setItem","setAuthHeader","SignupModal","backdrop","keyboard","Body","Tabs","defaultActiveKey","Tab","eventKey","title","id","RightSide","useState","modalShow","setModalShow","show","onHide","LandingPage","GitHubLogin","useContext","AuthContext","errorMessage","isLoading","setData","client_id","redirect_uri","useEffect","url","window","location","includes","newUrl","split","pushState","requestData","client_secret","code","proxy_url","fetch","method","body","JSON","stringify","json","user","isLoggedIn","error","to","src","GitHubLogo","alt","NavBar","handleSelect","userName","userObj","parse","getItem","room","currentTarget","isAuthenticated","profile","authLinks","_id","aria-hidden","DropdownButton","drop","Dropdown","Item","onSelect","Message","message","text","isSentByCurrentUser","trimmedName","trim","toLowerCase","ReactEmoji","emojify","Date","toLocaleString","Messages","messages","map","i","key","InfoBar","Input","setMessage","sendMessage","onKeyPress","Chat","setName","setRoom","setUsers","setMessages","queryString","search","io","emit","alert","off","on","users","gitInfo","process","REACT_APP_CLIENT_ID","REACT_APP_CLIENT_SECRET","REACT_APP_REDIRECT_URI","REACT_APP_PROXY_URL","initialState","reducer","variables","htmlURL","html_url","avatarUrl","avatar_url","bio","blog","company","hireable","gitAPI","clear","list","loading","combineReducers","Object","keys","length","following","filter","item","store","createStore","rootReducer","applyMiddleware","thunk","UserCard","public_repos","followers","Social","AboutCard","UserActions","Profile","SocialCard","loadProfile","loadPosts","Post","Card","createdAt","LoadingPosts","Spinner","animation","role","handleFollow","handleUnfollow","getPostsByUserId","match","params","userId","getUserProfile","prevProps","refreshUserProfile","followUser","unfollowUser","profileInfo","followButtons","loadingPosts","loadingProfile","items","el","indexOf","AddPost","handleTweetChange","event","postData","addPost","label","as","rows","ListPost","getPosts","notFound","createContext","now","jwt_decode","exp","removeItem","setHeaderAuth","App","useReducer","Provider","path","exact","component","reduxProfile","Join","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","origin","addEventListener","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6a067d84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gh.283497e5.png\";","// CHAT\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n// import CurrentUsers from '../CurrentUsers';\nimport NavBar from '../../NavBar';\nimport Messages from '../Messages';\nimport InfoBar from '../InfoBar';\nimport Input from '../Input';\n// NEW!! Framework is in pages/\nimport '../../../pages/Framework/css/style.css';\nimport '../../../pages/Framework/css/framework.css';\nimport '../../../pages/Framework/css/night-mode.css';\nimport '../../../pages/Framework/css/icons.css';\n\n// Keep this css to override framework as needed:\nimport './style.css';\n\nlet socket;\n// Change room to thread, like texting? User to user, not group rooms?\nconst Chat = ({ location }) => {\n\n    /* HOOKS */\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n\n    // console will complain about \"unused\" users var,\n    // but socket.io DEF uses it on the back end\n    const [users, setUsers] = useState('');\n\n    // individual message & all messages\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const ENDPOINT = 'localhost:5000';\n\n    // On Connect, data from URL params\n    useEffect(() => {\n        const { name, room } = queryString.parse(location.search);\n        socket = io(ENDPOINT);\n        setRoom(room);\n        setName(name);\n\n        // emit sends event to socket.io on backend\n        socket.emit('join', { name, room }, (err) => {\n            if (err) {\n                alert(err);\n            }\n        });\n\n        // ABOVE BLOCK socket.emit() might crash? try this:\n        // socket.emit('join', {name, room}, (err) => {\n        //     if(err){\n        //          do{\n        //              alert(err + 'Username taken, please go back and try another\");\n        //          }while(err);\n        //     }\n        //     });\n        //  }, [ENDPOINT, location.search]);\n\n        // might not need? begin:\n        return () => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n        // end\n\n    }, [ENDPOINT, location.search]);\n\n    // message handling\n    useEffect(() => {\n        // listen for messages, spread with new message\n        socket.on('message', message => {\n            setMessages(messages => [...messages, message]);\n        });\n\n        socket.on(\"roomData\", ({ users }) => {\n            setUsers(users);\n        });\n    }, []); // might need [messages] in callback\n\n    // send a new message\n    const sendMessage = (e) => {\n        e.preventDefault();\n        if (message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    };\n\n    return (\n        <div className=\"outerChatContainer\">\n            <NavBar />\n            <div className=\"chatContainer\">\n                <InfoBar room={room} />\n                <Messages messages={messages} name={name} />\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n            </div>\n            {/* <CurrentUsers users={users} /> */}\n        </div>\n    );\n}\n\nexport default Chat;","// LEFTSIDE - LANDINGPAGE\nimport React from 'react';\n\nconst LeftSide = () => {\n    return (\n        <div className=\"col-md-6 p-0 bg-main h-md-100\">\n            <div className=\"text-white d-md-flex align-items-center h-100 p-5 justify-content-center\">\n                <div className=\"logoarea pt-5 pb-5\">\n                    <ol>\n                        <i className=\"fa fa-heart icon\" style={{ marginLeft: \"0.1rem\" }}></i>\n                     &nbsp; Follow your interests.\n                    </ol>\n                    <ol>\n                        &nbsp;<i className=\"fa fa-user icon\"></i>\n                     &nbsp; Collaborate with others.\n                    </ol>\n                    <ol>\n                        &nbsp;<i className=\"fa fa-search icon\"></i>\n                     &nbsp; See what's happening.\n                    </ol>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default LeftSide;","import axios from \"axios\";\n\nexport default function(token) {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${(token)}`;\n    console.log(axios.defaults.headers.common[\"Authorization\"]);\n\n    console.log((token))\n\n    // error is happening on part when we parse the code. \n  } else {\n    axios.defaults.headers.common[\"Authorization\"] = null;\n  }\n}\n","import axios from 'axios';\nimport {GET_ERRORS, SET_CURRENT_USER} from \"../../constants/\"\n\nimport setAuthHeader from \"../../utils/setAuthHeader\"\n\nexport const loginUser = (userData) => dispatch => {\n    axios.post(\"/api/users/login\", userData)\n        .then(res => {\n            const { token } = res.data\n            localStorage.setItem(\"jwToken\", token)\n            setAuthHeader(token);\n            dispatch(getCurrentUser());\n\n            // browser is not getting token properly \n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\nexport const registerUser = (userData, history) => dispatch => {\n    axios.post(\"/api/users/register\", userData)\n        .then(res => history.push('/login'))\n        // .catch(err => console.log(err.response.data))\n        .catch(err => dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        }))\n}\n\nexport const getCurrentUser = () => dispatch => {\n    axios.get(\"/api/users\")\n        .then(res => dispatch(setCurrentUser(res.data)))\n}\n\nexport const setCurrentUser = (data) => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: data\n    }\n}\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem('jwtToken')\n    setAuthHeader();\n    dispatch(setCurrentUser())\n}","export const LOAD_PROFILE = \"LOAD_PROFILE\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const UNFOLLOW = \"UNFOLLOW\";\nexport const FOLLOW = \"FOLLOW\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const LOADING_POSTS = \"LOADING_POSTS\"\nexport const GET_POSTS = \"GET_POSTS\"\nexport const ADD_POST = \"ADD_POST\"\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"\n\n","import React, { Component } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../../actions/authActions/authActions\";\n\nclass Signup extends Component {\n  constructor(props) {\n    // VS Intellisense is marking this use of 'super' as deprecated\n    super(props);\n    this.state = {\n      fullname: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // really cool way to handle new errors\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const userData = {\n      fullname: this.state.fullname,\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    console.log(userData)\n\n    this.props.registerUser(userData, this.props.history);\n\n    // working on redirect after login, but this doesn't hit yet\n    // return <Redirect to=\"/profile/:id\" />\n\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <Form className=\"modal-body\">\n          <Form.Group className=\"md-form form-sm mb-4\">\n            <i className=\"fa fa-user prefix mr-2\"></i>\n            <Form.Label data-error=\"wrong\" data-success=\"right\">\n              Your Name\n            </Form.Label>\n\n            {/* name */}\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              className=\"form-control form-control-sm validate\"\n              value={this.state.fullname}\n              onChange={this.handleChange}\n              name=\"fullname\"\n            />\n            <Form.Text> {errors.fullname ? errors.fullname : null} </Form.Text>\n          </Form.Group>\n\n          {/* Email */}\n          <Form.Group className=\"md-form form-sm mb-4\">\n            <i className=\"fa fa-envelope prefix mr-2\"></i>\n            <Form.Label data-error=\"wrong\" data-success=\"right\">\n              Your Email\n            </Form.Label>\n            {/* user input email */}\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              className=\"form-control form-control-sm validate\"\n              value={this.state.email}\n              onChange={this.handleChange}\n              name=\"email\"\n            />\n            <Form.Text>{errors.email ? errors.email : null}</Form.Text>\n          </Form.Group>\n\n          {/* Password */}\n          <Form.Group className=\"md-form form-sm mb-4\">\n            <i className=\"fa fa-lock prefix mr-2\"></i>\n            <Form.Label data-error=\"wrong\" data-success=\"right\">\n              Your Password\n            </Form.Label>\n\n            {/* user input pw */}\n            <Form.Control\n              type=\"password\"\n              placeholder=\"••••••\"\n              className=\"form-control form-control-sm validate\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              name=\"password\"\n            />\n            <Form.Text\n            >\n              {errors.password ? errors.password : null}\n            </Form.Text>\n          </Form.Group>\n\n          {/* Sign Up */}\n          <div className=\"text-center form-sm mt-2\">\n            <Button\n              className=\"modalSignin btn btn-primary\"\n              onClick={() => this.handleSubmit}\n            >\n              Sign up <i className=\"fa fa-sign-in ml-1\"></i>\n            </Button>\n          </div>\n        </Form>\n\n        <Modal.Footer>\n          <div className=\"options text-right\">\n            <p className=\"pt-1\">\n              Already have an account?{\" \"}\n              <a href=\"login\" className=\"text-primary mr-1\">\n                Log In\n            </a>\n            </p>\n            <p>Escape to close</p>\n          </div>\n        </Modal.Footer>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Signup));\n","import React, { Component } from \"react\";\nimport { Form, Button, Modal } from \"react-bootstrap\";\n\nimport { withRouter } from \"react-router-dom\";\n\n// import userLogin from \"../RightSide/\"\nimport { connect } from \"react-redux\"\nimport { loginUser } from \"../../../actions/authActions/authActions\"\n\n\nclass Login extends Component {\n  constructor(props) {\n    // VS Intellisense is marking this use of 'super' as deprecated\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // we don't need to be authenticated outside\n  // componentDidMount() {\n\n  //   if (this.props.auth.isAuthenticated) {\n  //     this.props.history.push('/')\n  //   }\n  // }\n\n  // really cool way to handle new errors\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    console.log(userData);\n\n    this.props.loginUser(userData);\n\n    // NEW - THIS needs to have use id concatenated for url\n    // for now this sends you to a black page. how fun.\n    this.props.history.push('/profile/');\n\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <Form className=\"modal-body mx-4\" ref=\"loggingIn\" action=\"/profile\">\n          {/* Email */}\n          <Form.Group className=\"md-form mb-4\" controlId=\"formBasicEmail\">\n            <Form.Label data-error=\"wrong\" data-success=\"right\">\n              Your email\n            </Form.Label>\n            {/* this is where user text goes, add cool autocomplete stuff to it later */}\n\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              className=\"form-control validate\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n            <Form.Text className=\"text-muted\">\n              {errors.email\n                ? errors.email\n                : \"We'll never share your email with anyone else.\"}\n            </Form.Text>\n          </Form.Group>\n\n          {/* Password */}\n          <Form.Group className=\"md-form pb-3\" controlId=\"formBasicPassword\">\n            <Form.Label data-error=\"wrong\" data-success=\"right\">\n              Your password\n            </Form.Label>\n\n            {/* this is where user pw input */}\n            <Form.Control\n              type=\"password\"\n              placeholder=\"••••••\"\n              className=\"form-control validate\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <div className=\"text-center mb-3\">\n            </div>\n            <Form.Text className=\"text-muted\">\n              {errors.password ? errors.password : \"\"}\n            </Form.Text>\n            <p className=\"font-small blue-text d-flex justify-content-end\">\n              <a href=\"/\" className=\"blue-text ml-1\">\n                Forgot Password?\n              </a>\n            </p>\n          </Form.Group>\n          {/* Sign in */}\n          <div className=\"text-center mb-3\">\n            <Button\n              type=\"button\"\n              className=\"modalSignin btn btn-primary btn-block btn-rounded\"\n              onClick={this.handleSubmit}\n            >\n              Sign in\n            </Button>\n          </div>\n          {/* Other Sign in Methods */}\n          <p className=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\">\n            Or Sign in with\n          </p>\n          <div className=\"row my-2 d-flex justify-content-center\">\n            {/* Facebook Login, stretch goal?? */}\n\n            {/* Google Login */}\n            <Button\n              href=\"/googlelogin\"\n              type=\"button\"\n              className=\"goog btn-dark mr-2 md-2\"\n            >\n              <i className=\"fab fa-google\" style={{ fontSize: 30 }}></i>\n            </Button>\n            {/* Github Login */}\n            <Button\n              href=\"/githublogin\"\n              type=\"button\"\n              className=\"github btn-dark mr-2 md-2\"\n\n            >\n              <i className=\"fab fa-github\" style={{ fontSize: 30 }}></i>\n            </Button>\n          </div>\n        </Form>\n\n        <Modal.Footer>\n          <div className=\"options text-right\">\n            <p>Escape to close</p>\n          </div>\n        </Modal.Footer>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n})\n\n\nexport default connect(mapStateToProps, { loginUser })(withRouter(Login));\n\n","// RIGHTSIDE - LANDINGPAGE\n\n// Modal built-in,  could be broken out to a\n// third Component, but that needs more research?\nimport React, { useState } from \"react\";\nimport { Form, Tabs, Tab, Button, Modal } from \"react-bootstrap\";\n\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\n\nconst RightSide = () => {\n  // Modal State & helper functions\n  const [modalShow, setModalShow] = useState(false);\n  const handleClose = () => setModalShow(false);\n  const handleShow = () => setModalShow(true);\n\n  return (\n    <>\n      <div className=\"col-md-6 p-0 bg-dark h-md-100 loginarea\">\n        <div className=\"d-md-flex align-items-center h-md-100 p-5 justify-content-center loginarea\">\n          <div className=\"d-md-flex align-items-center h-md-100 p-5 justify-content-center\">\n            <Form className=\"p-5\">\n              <Button\n                type=\"button\"\n                className=\"signinBtn btn btn-primary btn-round btn-block\"\n                onClick={handleShow}\n              >\n                Sign in\n              </Button>\n            </Form>\n          </div>\n        </div>\n      </div>\n\n      {/* onHide is not actually used, but maybe we add a close button? */}\n      <SignupModal show={modalShow} onHide={handleClose} />\n    </>\n  );\n};\n\n// pulls props from above to trigger modal on click\nconst SignupModal = props => {\n  // so the top part is made in hooks, then passes down props in a spreader operator,\n  // but we need login those login form.controls to be in a `CLASS` component in order for\n  // redux to work...\n  // legit just moved all the code to signup.js and made that as class component, everything seems\n  // to work still\n  return (\n    <Modal {...props} backdrop=\"static\" keyboard={true}>\n      <Modal.Body>\n        <Tabs defaultActiveKey=\"login\">\n          <Tab eventKey=\"login\" title=\"Login\">\n            <Login />\n          </Tab>\n          <Tab eventKey=\"register\" title=\"Register\" id=\"register\">\n            <Signup />\n          </Tab>\n        </Tabs>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default RightSide;\n","// LANDINGPAGE\nimport React from 'react';\nimport LeftSide from './LeftSide';\nimport RightSide from './RightSide';\nimport './style.css';\n\n// LeftSide (blue) is static,\n// RightSide (black) has Modal built-in\nconst LandingPage = () => {\n\n    return (\n        <div className=\"d-md-flex h-md-100 align-items-center\">\n\n            <LeftSide />\n\n            <RightSide />\n\n        </div>\n    )\n}\n\nexport default LandingPage;","//// GITHUB LOGIN ////\n// for now, this is just GitHub, but we can integrate Gogle here too\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../../App\";\nimport GitHubLogo from './gh.png';\nimport './style.css';\n\nimport { connect } from \"react-redux\"\n\n\n// creating our login component, using AuthContext global state\nconst GitHubLogin = () => {\n    const { state, dispatch } = useContext(AuthContext);\n    const [data, setData] = useState({ errorMessage: \"\", isLoading: false });\n\n    const { client_id, redirect_uri } = state;\n\n    useEffect(() => {\n        //  Github redirects back with a code parameter\n        const url = window.location.href;\n        const hasCode = url.includes(\"?code=\");\n\n        // If Github API returns the code parameter\n        if (hasCode) {\n            const newUrl = url.split(\"?code=\");\n            window.history.pushState({}, null, newUrl[0]);\n            setData({ ...data, isLoading: true });\n\n            const requestData = {\n                client_id: state.client_id,\n                redirect_uri: state.redirect_uri,\n                client_secret: state.client_secret,\n                code: newUrl[1]\n            };\n\n            const proxy_url = state.proxy_url;\n\n            // Use code parameter and other parameters to make POST request to proxy_server\n            fetch(proxy_url, {\n                method: \"POST\",\n                body: JSON.stringify(requestData)\n            })\n                .then(response => response.json())\n                .then(data => {\n                    dispatch({\n                        type: \"LOGIN\",\n                        payload: { user: data, isLoggedIn: true }\n                    });\n                })\n                .catch(error => {\n                    console.log(error)\n                    setData({\n                        isLoading: false,\n                        errorMessage: \"Sorry! Login failed\"\n                    });\n                });\n        }\n    }, [state, dispatch, data]);\n\n    if (state.isLoggedIn) {\n        return <Redirect to=\"/profile/:id\"/>;\n    }\n\n    // Based on login state, this displays a loading spinner and / or error msg\n    return (\n        <div className=\"gitContainer\">\n            <div className=\"login-card\">\n                <h1 className=\"welcome\">Welcome</h1>\n                <h5 className=\"coding\">Coding Society</h5>\n                <img src={GitHubLogo} alt=\"GitHub OctoCat\" className=\"octocat\" />\n                <span className=\"errMsg\">{data.errorMessage}</span>\n                <div className=\"login-bar\">\n                    {data.isLoading ? (\n                        <div className=\"loader-container\">\n                            <div className=\"loader\"></div>\n                        </div>\n                    ) : (\n                            <>\n                                {\n                                    // Link to request GitHub access\n                                }\n\n                                <a className=\"login-link\"\n                                    href={`https://github.com/login/oauth/authorize?scope=user&client_id=${client_id}&redirect_uri=${redirect_uri}`}\n                                    onClick={() => {\n                                        setData({ ...data, errorMessage: \"\" });\n                                    }}>Authorize</a>\n                            </>\n                        )}\n                </div>\n                <p className=\"text-secondary text-center\">This leads to GitHub's Authorization</p>\n            </div >\n        </div >\n\n    );\n}\n\nexport default GitHubLogin;","//////// new attempt to rewrite as Redux, probably bug-filled\n// NAVBAR - PROFILE\nimport React, { Component } from 'react';\nimport { Button, Dropdown, DropdownButton, Form, FormControl } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport { withRouter } from 'react-router-dom';\n// import { getCurrentUser } from \"../../actions/authActions/authActions\";\nimport './style.css';\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            room: '',\n            // search: ''\n        }\n    }\n\n\n    // works for GitHub auth, needs additional\n    // logic for email auth users\n    \n    handleSelect = (e) => {\n        let userName;\n        let userObj = JSON.parse(localStorage.getItem(\"user\"));\n        if (!userObj) {\n            // logic for getting email-auth's name\n            // userObj = something pulled from db or other localstorage\n\n            // i fixed it, scroll down to see what we can pull from redux -- eric\n            userName = this.props.auth.user.fullname\n        } else {\n            userName = userObj.name;\n        }\n        this.setState({ name: userName });\n        this.setState({ room: e.currentTarget });\n    };\n\n    // // this may have to be abandoned, no search? Stretch Goal!\n    // handleSearch = (e) => {\n    //     e.preventDefault();\n    //     searchAPI.searchUser(search)\n    //         .then(res => {\n    //             if (res.data.items === \"error\") {\n    //                 throw new Error(res.data.items);\n    //             } else {\n    //                 console.log(res.data);\n    //             }\n    //         })\n    //         .catch(err => console.log(err));\n    // };\n\n    render() {\n\n        const { \n            auth,\n            user,\n            profile,\n            isAuthenticated,\n        } = this.props;\n\n        // console.log(auth)\n\n        // console.log(user)\n\n        // console.log(profile)\n\n        // console.log(this.props.auth.user)\n\n        const authLinks = isAuthenticated \n        && (\n            <Button href={`/reduxProfile/${this.props.auth.user._id}`} className=\"navbarLogo\">\n                <i className=\"far fa-user-circle\" alt=\"reduxProfile\" aria-hidden=\"true\"></i>\n            </Button>\n        )\n\n\n        return (\n            <div className=\"navbarContainer\">\n                <Button href=\"/Posts\" className=\"navbarLogo\">\n                    <i className=\"fas fa-stream\" aria-hidden=\"true\" title=\"profile\"></i>\n                </Button>\n\n                {/* Dropup Chat: pop into any of a few predefined live chatrooms,\n                we can add as many more as we like, let's keep it under 10 maybe? */}\n                <DropdownButton\n                    className=\"navbarLogo\"\n                    title={\n                        <i className=\"far fa-comment-alt\" aria-hidden=\"true\"></i>\n                    } drop=\"up\">\n                    <Dropdown.Item className=\"liveChats\">Chat Rooms:</Dropdown.Item>\n                    <Dropdown.Item href={`/chat?name=${this.state.name}&room=Frontend`} eventKey=\"Frontend\" onSelect={this.handleSelect}>#frontend</Dropdown.Item>\n                    <Dropdown.Item href={`/chat?name=${this.state.name}&room=Backend`} eventKey=\"Backend\" onSelect={this.handleSelect}>#backend</Dropdown.Item>\n                    <Dropdown.Item href={`/chat?name=${this.state.name}&room=Hardware`} eventKey=\"Hardware\" onSelect={this.handleSelect}>#hardware</Dropdown.Item>\n                    <Dropdown.Item href={`/chat?name=${this.state.name}&room=Gaming`} eventKey=\"Gaming\" onSelect={this.handleSelect}>#gaming</Dropdown.Item>\n                    <Dropdown.Item href={`/chat?name=${this.state.name}&room=Life`} eventKey=\"Life\" onSelect={this.handleSelect}>#life</Dropdown.Item>\n                </DropdownButton>\n\n                {/* Dropup Search - pass submission to db (not written)  */}\n                {/* <DropdownButton\n                    alignRight\n                    className=\"navbarLogo\"\n                    title={\n                        <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n                    } drop=\"up\">\n                    <Form onSubmit={handleSearch}>\n                        <FormControl\n                            autoFocus\n                            type=\"search\"\n                            className=\"mx-3 my-2 w-auto\"\n                            placeholder=\"Search for Users\"\n                            onChange={(e) => setSearch(e.target.value)}\n                        />\n                    </Form>\n                </DropdownButton> */}\n\n                <Button href=\"/profile/:id\" className=\"navbarLogo\">\n                    <i className=\"far fa-user-circle\" aria-hidden=\"true\"></i>\n                </Button>\n\n                { isAuthenticated ? authLinks : null }\n            </div>\n        )\n    }\n};\n\n// this is just copy & paste for a moment, idk what this does\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile,\n    user: state.user,\n    isAuthenticated: state.auth.isAuthenticated,\n})\n\n// also c&p kinda\n// export default connect(mapStateToProps)(withRouter(NavBar));\nexport default connect(mapStateToProps)(NavBar);\n\n\n\n// ///////////////////////// old but almost working\n\n// // NAVBAR - PROFILE\n// import React, { useState } from 'react';\n// import { Button, Dropdown, DropdownButton, Form, FormControl } from 'react-bootstrap';\n// // import { useSelector } from 'react-redux';\n// // import { getCurrentUser } from \"../../actions/authActions/authActions\";\n// import searchAPI from '../../utils/searchUserAPI';\n// import './style.css';\n\n// const NavBar = () => {\n\n//     // hooks for getting user & chatroom for URL,\n//     // and hook for search bar\n//     const [name, setName] = useState('');\n//     const [room, setRoom] = useState('');\n//     const [search, setSearch] = useState('');\n//     // const { isLoggedIn } = useSelector(state => state.auth);\n\n//     // handleSelect for chat dropup menu\n//     // this works, grabs name & room selected to create URL\n//     const userName = JSON.parse(localStorage.getItem(\"user\"));\n//     const handleSelect = (e) => {\n//         setName(userName.name);\n//         setRoom(e);\n//     };\n\n//     /////// FAILED ATTEMPTS at getting name of an email user ////////\n//     // const userName = JSON.parse(localStorage.getItem(\"user\"));\n//     // if (userName === \"\") {\n//     //     localStorage.setItem(\"currentUser\", JSON.stringify(getCurrentUser()));\n//     // };\n//     // const handleSelect = (e) => {\n//     //     setName(userName.name);\n//     //     setRoom(e);\n//     // };\n\n//     // const userName = JSON.parse(localStorage.getItem(\"user\"));\n//     // let userName;\n//     // if (isLoggedIn) {\n//     //     console.log(\"yes\");\n//     //     userName = \"word\";\n//     // } else {\n//     //     userName = JSON.parse(localStorage.getItem(\"user\"));\n//     // };\n//     // const handleSelect = (e) => {\n//     //     setName(userName.name);\n//     //     setRoom(e);\n//     // };\n//     ///////// END FAILURE (not really) ///////////\n\n//     ////// HANDLE SEARCH - broken ///////\n//     const handleSearch = (e) => {\n//         e.preventDefault();\n//         // send search to API to DB?\n//         // HOW DOES THIS WORK??\n//         searchAPI.searchUser(search)\n//             .then(res => {\n//                 if (res.data.items === \"error\") {\n//                     throw new Error(res.data.items);\n//                 } else {\n//                     console.log(res.data);\n//                 }\n//             })\n//             .catch(err => console.log(err));\n//     };\n\n//     return (\n//         <div className=\"navbarContainer\">\n//             <Button href=\"/Posts\" className=\"navbarLogo\">\n//                 <i className=\"fas fa-stream\" aria-hidden=\"true\" title=\"profile\"></i>\n//             </Button>\n\n//             {/* Dropup Chat: pop into any of a few predefined live chatrooms,\n//                 we can add as many more as we like, let's keep it under 10 maybe? */}\n//             <DropdownButton\n//                 className=\"navbarLogo\"\n//                 title={\n//                     <i className=\"far fa-comment-alt\" aria-hidden=\"true\"></i>\n//                 } drop=\"up\">\n//                 <Dropdown.Item className=\"liveChats\">Chat Rooms:</Dropdown.Item>\n//                 <Dropdown.Item href={`/chat?name=${name}&room=${room}`} eventKey=\"Frontend\" onSelect={handleSelect}>#frontend</Dropdown.Item>\n//                 <Dropdown.Item href={`/chat?name=${name}&room=${room}`} eventKey=\"Backend\" onSelect={handleSelect}>#backend</Dropdown.Item>\n//                 <Dropdown.Item href={`/chat?name=${name}&room=${room}`} eventKey=\"Hardware\" onSelect={handleSelect}>#hardware</Dropdown.Item>\n//                 <Dropdown.Item href={`/chat?name=${name}&room=${room}`} eventKey=\"Gaming\" onSelect={handleSelect}>#gaming</Dropdown.Item>\n//                 <Dropdown.Item href={`/chat?name=${name}&room=Life`} eventKey=\"Life\" onSelect={handleSelect}>#life</Dropdown.Item>\n//             </DropdownButton>\n\n//             {/* Dropup Search - pass submission to db (not written)  */}\n//             <DropdownButton\n//                 alignRight\n//                 className=\"navbarLogo\"\n//                 title={\n//                     <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n//                 } drop=\"up\">\n//                 <Form onSubmit={handleSearch}>\n//                     <FormControl\n//                         autoFocus\n//                         type=\"search\"\n//                         className=\"mx-3 my-2 w-auto\"\n//                         placeholder=\"Search for Users\"\n//                         onChange={(e) => setSearch(e.target.value)}\n//                     />\n//                 </Form>\n//             </DropdownButton>\n\n//             <Button href=\"/profile/:id\" className=\"navbarLogo\">\n//                 <i className=\"far fa-user-circle\" aria-hidden=\"true\"></i>\n//             </Button>\n//         </div>\n//     )\n// };\n\n// export default NavBar;","// MESSAGE - Single messages\nimport React, { useContext } from \"react\";\nimport ReactEmoji from 'react-emoji';\nimport { AuthContext } from \"../../../../App\";\nimport './style.css';\n\n// NEW!!\nimport '../../../../pages/Framework/css/style.css';\nimport '../../../../pages/Framework/css/framework.css';\nimport '../../../../pages/Framework/css/icons.css';\nimport '../../../../pages/Framework/css/night-mode.css';\n\nconst Message = ({ message: { text, user }, name }) => {\n\n\n    // only errors we had was avatar URL, fix it later? \n    const { state } = useContext(AuthContext);\n    // const { avatar_url } = state.user;\n\n\n    // getting names corresponding to who sent the message\n    let isSentByCurrentUser = false;\n    const trimmedName = name.trim().toLowerCase();\n\n    if (user === trimmedName) {\n        isSentByCurrentUser = true;\n    }\n\n    // ternary to make user's own messages look different\n    return (\n        isSentByCurrentUser\n            ? (\n                <div className=\"message-content-inner\">\n\n                    <div className=\"message-bubble me\">\n                        <div className=\"message-bubble-inner\">\n                            <div className=\"message-avatar\">\n                                {/* ternary to display GH avatar or placeholder\n                                {!state.avatar_url ? (\n                                    <img className=\"lilAvatar\" src={avatar_url} alt=\"Avatar\" />\n                                ) : (\n                                        <img className=\"fas fa-user-circle\" alt=\"Avatar\"></img>\n                                    )\n                                } */}\n                            </div>\n                            <div className=\"message-text\">\n                                <p>{ReactEmoji.emojify(text)}</p>\n                            </div>\n                        </div>\n                        <div className=\"uk-clearfix\"></div>\n                        <p className=\"sentText justifyEnd\">{trimmedName}</p>\n                        <span className=\"sentText justifyEnd\"> {new Date().toLocaleString()} </span>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"message-content-inner\">\n                    <div className=\"message-bubble\">\n                        <div className=\"message-bubble-inner\">\n                            <div className=\"message-avatar\">\n                                {/* ternary to display GH avatar or placeholder\n                                {!state.avatar_url ? (\n                                    <i className=\"lilAvatar fas fa-user-circle\" alt=\"Avatar\"></i>\n                                ) : (\n                                        <img className=\"avatar\" src={avatar_url} alt=\"Avatar\" />\n                                    )\n                                } */}\n                            </div>\n                            <div className=\"message-text\">\n                                <p>{ReactEmoji.emojify(text)}</p>\n                            </div>\n                        </div>\n                        <div className=\"uk-clearfix\"></div>\n                        <p className=\"sentText paddingLeft\">{user}</p>\n                        <span className=\"sentText paddingLeft\"> {new Date().toLocaleString()} </span>\n                    </div>\n                </div>\n            )\n    )\n\n\n    // OLD LAYOUT - might need chunks\n    // for if, ternary to make user's own messages look different\n    // let isSentByCurrentUser = false;\n    // const trimmedName = name.trim().toLowerCase();\n\n    // if (user === trimmedName) {\n    //     isSentByCurrentUser = true;\n    // }\n\n    // return (\n    //     isSentByCurrentUser\n    //         ? (\n    //             <div className=\"messageContainerC\">\n    //                 <p className=\"sentText paddingRight\">{trimmedName}</p>\n    //                 <div className=\"messageBox backgroundBlue\">\n    //                     <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\n    //                 </div>\n    //             </div>\n    //         )\n    //         : (\n    //             <div className=\"messageContainer justifyStart\">\n    //                 <div className=\"messageBox backgroundLight\">\n    //                     <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\n    //                 </div>\n    //                 <p className=\"sentText paddingLeft \">{user}</p>\n    //             </div>\n    //         )\n    // );\n}\n\nexport default Message;","// MESSAGES Box\nimport React from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport Message from './Message';\nimport './style.css';\n\n\n// ScrollToBottom scrolls to most recent messages\nconst Messages = ({ messages, name }) => (\n    <ScrollToBottom className=\"messages messageViewer\">\n        {messages.map((message, i) => <div key={i}><Message message={message} name={name} /></div>)}\n    </ScrollToBottom>\n);\n\nexport default Messages;","// INFOBAR\nimport React from 'react';\nimport './style.css';\n\n\n// rendering an InfoBar that indicates what rooms are open\nconst InfoBar = ({ room }) => (\n    <div className=\"infoBar chats-headline\">\n        {/* THIS could be subbed out for who you're chatting with in a DM setup? */}\n        <div className=\"leftInnerContainer uk-flex\">\n            <h3>{room}</h3>\n            <i className=\"onlineIcon ml-2 mt-1 text-success fas fa-signal\"></i>\n        </div>\n    </div>\n\n    // OLD LAYOUT - MIGHT NEED CHUNKS\n    // <div className=\"infoBar\">\n    //     <div className=\"leftInnerContainer\">\n    //         <img className=\"onlineIcon\" src={onlineIcon} alt=\"Online indicator.\" />\n    //         <h3>{room}</h3>\n    //     </div>\n    //     <div className=\"rightInnerContainer\">\n    //         <a href=\"/\"><i className=\"far fa-times-circle\"></i></a>\n    //     </div>\n    // </div>\n);\n\nexport default InfoBar;\n","// INPUT Chat box\nimport React from 'react';\nimport './style.css';\n\n\n// render the Input text bar, passing all these as props\nconst Input = ({ setMessage, sendMessage, message }) => (\n\n    <form className=\"message-reply uk-flex-middle uk-width-1-1\">\n        <textarea\n            className=\"chatInput uk-textarea uk-width-expand\"\n            type=\"text\"\n            placeholder=\"What's up?\"\n            value={message}\n            onChange={({ target: { value } }) => setMessage(value)}\n            onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n        />\n        <button className=\"sendButton button primary\" onClick={e => sendMessage(e)}><i className=\"uil-plane\"></i></button>\n    </form>\n\n    // OLD LAYOUT - might need chunks\n    // <form className=\"chatForm\">\n    //     <input\n    //         className=\"chatInput\"\n    //         type=\"text\"\n    //         placeholder=\"What's up?\"\n    //         value={message}\n    //         onChange={({ target: { value } }) => setMessage(value)}\n    //         onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null}\n    //     />\n    //     <button className=\"sendButton\" onClick={e => sendMessage(e)}><img alt=\"Paper Plane\" src={Plane} /></button>\n    // </form>\n)\n\nexport default Input;","import axios from 'axios';\n\n\n// this is for posts api\n\n// THIS FILE IS THE BRIDGE BETWEEN REACT AND OUR EXPRESS ROUTES TO MONGO\n\nexport default {\n\n    // save post to db\n\n    saveGitInfo: function (gitInfo) {\n        return axios.post(\"/api/gitinfo/addGitInfo\", gitInfo)\n    },\n\n    // get gitInfo from db\n\n    getGitInfo: function (id) {\n        return axios.get(\"/api/userInfo/\" + id)\n    }\n\n};","//// REDUCER for AuthContext in App.js ////\nimport gitAPI from \"../../utils/GithubAPIS\";\n\n// pulled from client/.env\nconst {\n  REACT_APP_CLIENT_ID,\n  REACT_APP_CLIENT_SECRET,\n  REACT_APP_REDIRECT_URI,\n  REACT_APP_PROXY_URL\n} = process.env;\n\n// creating app state\nexport const initialState = {\n  isLoggedIn: JSON.parse(localStorage.getItem(\"isLoggedIn\")) || false,\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  id: \"\",\n  client_id: REACT_APP_CLIENT_ID,\n  redirect_uri: REACT_APP_REDIRECT_URI,\n  client_secret: REACT_APP_CLIENT_SECRET,\n  proxy_url: REACT_APP_PROXY_URL\n};\n\n// reducer actions dispatched to mutate state\n\n// ADD TO DB??\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\": {\n      localStorage.setItem(\n        \"isLoggedIn\",\n        JSON.stringify(action.payload.isLoggedIn)\n      );\n      localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\n\n      // just for testing, might have to make this for register case instead of log in\n      // ORRR \"findbyId, if (!user): submit this info\"\n      // on login, we will save this info into the database\n      // console.log(action.payload.user);\n\n      const variables = {\n        id: action.payload.user.id,\n        htmlURL: action.payload.user.html_url,\n        name: action.payload.user.name,\n        avatarUrl: action.payload.user.avatar_url,\n        bio: action.payload.user.bio,\n        blog: action.payload.user.blog,\n        company: action.payload.user.company,\n        hireable: action.payload.user.hireable\n      };\n\n      gitAPI.saveGitInfo(variables);\n\n      return {\n        ...state,\n        isLoggedIn: action.payload.isLoggedIn,\n        user: action.payload.user\n      };\n    }\n    case \"LOGOUT\": {\n      localStorage.clear();\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null\n      };\n    }\n    case \"VIEWUSER\": {\n      gitAPI.getGitInfo()\n        .then(console.log(action.payload))\n        // .then(res => {\n        // })\n        .catch(err => console.log(err));\n      return {\n        ...state\n        // profileState: res.data\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { GET_ERRORS }from \"../constants\"\n\nconst initialState = {\n    \n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload\n        default:\n            return state\n    }\n}","import {\n    ADD_POST,\n    LOADING_POSTS,\n    GET_POSTS,\n} from \"../constants\"\n\nconst initialState = {\n    list: null,\n    loading: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_POST:\n            return {\n                ...state,\n                list: [action.payload, ...state.list]\n            }\n        case LOADING_POSTS:\n            return {\n                ...state,\n                loading: true\n            }\n        case GET_POSTS:\n            return {\n                ...state,\n                loading: false,\n                list: action.payload\n            }\n        default:\n            return state\n    }\n}","import { \n    SET_CURRENT_USER,\n    FOLLOW,\n    UNFOLLOW\n} from \"../constants\"\n\n\nconst initialState = {\n    //isLoggedIn: JSON.parse(localStorage.getItem(\"isLoggedIn\")) || false,\n    user: JSON.parse(localStorage.getItem(\"user\")) || null,\n    isAuthenticated: false,\n}\n// this authentication part is probably \n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: Object.keys(action.payload).length !== 0,\n                user: action.payload\n            }\n        case FOLLOW:\n            return {\n                ...state.user,\n                following: [...state.user.following, action.payload]\n            }\n\n            // to unfollow, filter out the userid from following list. \n        case UNFOLLOW:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    following: state.user.following.filter(item => item !== action.payload)\n                }\n            }\n        default:\n            return state \n    }\n}","import { LOAD_PROFILE,\nGET_PROFILE \n} from \"../constants\"\n\nconst initialState = {\n    loading: false,\n    user: null\n}\n\nexport default function (state = initialState, action) {\n    switch(action.type) {\n        case LOAD_PROFILE:\n            return {\n                ...state,\n                loading: true\n            }\n        case GET_PROFILE:\n            return {\n                ...state,\n                loading: false,\n                user: action.payload\n            }\n        default:\n                return state\n    }\n}","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport postReducer from \"./postReducer\"\nimport authReducer from \"./authReducer\"\nimport profileReducer from \"./profileReducer\";\n\n\nexport default combineReducers({\n    errors: errorReducer,\n    post: postReducer,\n    auth: authReducer,\n    profile: profileReducer\n})","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n);\n\n\nexport default store;\n","// USERCARD - PROFILE\nimport React, { useContext } from \"react\";\n// import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { AuthContext } from \"../../../App\";\nimport './style.css';\n// import gitAPI from \"../../../utils/GithubAPIS\";\n\n\nconst UserCard = () => {\n\n    // // AuthContext using reducer\n    const { state } = useContext(AuthContext);\n\n    // const [gitName, setGitName] = useState()\n    // const [id, setId] = useState()\n    // const [bio, setBio] = useState()\n    // const [company, setCompany] = useState()\n    // const [blog, setBlog] = useState()\n    // const [hireable, setHireable] = useState()\n    // const [avatarURL, setAvatarURL] = useState()\n\n    // useEffect(() => {\n    //     gitAPI.getGitInfo(state.user.id)\n    //         .then(res => {\n    //             // console.log(res.data)\n    //             setGitName = res.data.name\n    //             setId = res.data.id;\n    //             setBio = res.data.bio;\n    //             setCompany = res.data.company;\n    //             setBlog = res.data.blog;\n    //             setHireable = res.data.hireable;\n    //             setAvatarURL = res.data.avatarURL;\n    //         })\n    //         .catch(err => console.log(err));\n    //         // console.log(profileState)\n    // })\n\n    if (!state.isLoggedIn) {\n        return <Redirect to=\"/login\" />;\n    }\n\n\n    // console.log(state.user)\n\n    // create props for user\n    const {\n        avatar_url,\n        name,\n        public_repos, followers, following } = state.user;\n\n\n    return (\n        <div className=\"card profCard container\" id=\"profile\">\n\n            {/* ternary to display GH avatar or placeholder */}\n            {!state.avatar_url ? (\n                <img className=\"avatar\" src={avatar_url} alt=\"Avatar\" />\n            ) : (\n                    <i className=\"avatar fas fa-user-circle\" alt=\"Avatar\"></i>\n                )\n            }\n            <h1>{name}</h1>\n            {/* <h3>Programmer | Meditator | Boxer | Surfer | Learner</h3> */}\n\n            {/* if the user logs in w/ GH, show some details this ternary\n            could be expanded & nested to sort for Google logins as well */}\n            <ul className=\"ghStats mt-3\"><h5>GitHub Stats</h5>\n                {!state.user ? (\n                    <li>Click the Octocat button below to check out my profile!</li>\n                ) : (\n                        <>\n                            <li>{public_repos} Repos</li>\n                            <li>{followers} Followers</li>\n                            <li>{following} Following</li>\n                        </>\n                    )}\n            </ul>\n            <p> Maybe this will be the one box you can edit & write something\n                about yourself. Plus, I couldn't look at the Lorem Ipsum anymore.</p>\n            <Button href=\"#\" target=\"_blank\" className=\"msgBtn\">Message me</Button>\n        </div>\n    )\n};\n\nexport default UserCard;","// SOCIAL CARD - PROFILE\nimport React, { useContext } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { AuthContext } from \"../../../App\";\nimport './style.css';\n\n\nconst Social = () => {\n\n    // pulling state.user from Context\n    const { state } = useContext(AuthContext);\n\n    // Redirect needed to prevent crashing\n    if (!state.isLoggedIn) {\n        return <Redirect to=\"/\" />;\n    }\n    // needs to be below if()\n    const { html_url } = state.user;\n\n\n    return (\n        <div className=\"card profCard container my-2 d-flex justify-content-center\" id=\"social\">\n\n            {/* This setup should work, just need to drop in links? */}\n            <Button href=\"#\" type=\"button\" className=\"socialBtn\">\n                <i className=\"fab fa-facebook-square m-2\" aria-hidden=\"true\" title=\"facebook\" ></i>\n            </Button>\n            <Button href=\"#\" type=\"button\" className=\"socialBtn\">\n                <i className=\"fab fa-instagram m-2\" aria-hidden=\"true\" title=\"Instagram\" ></i>\n            </Button>\n            <Button href=\"#\" type=\"button\" className=\"socialBtn\">\n                <i className=\"fab fa-linkedin m-2\" aria-hidden=\"true\" title=\"Linkedin\" ></i>\n            </Button>\n            <Button href={html_url} type=\"button\" className=\"socialBtn\">\n                <i className=\"fab fa-github-square m-2\" aria-hidden=\"true\" title=\"Github\" ></i>\n            </Button>\n\n        </div>\n    )\n};\n\nexport default Social;","// ABOUTCARD - PROFILE\nimport React from 'react';\nimport './style.css';\n\nconst AboutCard = () => {\n    return (\n        <div className=\"card profCard text-align container\">\n            <h2 className=\"d-flex justify-content-center\">About me</h2>\n            <div className=\"book-card\">\n                <div className=\"book-content\">\n                    <h4>Favorite Book</h4>\n                    <p>The book concerns duality in Kerouac's life and ideals, examining the relationship of the outdoors, mountaineering, hiking, and hitchhiking through the West with his \"city life\" of jazz clubs, poetry readings, and drunken parties. The protagonist's search for a \"Buddhist\" context to his experiences (and those of others he encounters) recurs throughout the story.</p>\n                </div>\n            </div>\n            <div className=\"book-card\">\n                <div className=\"book-content\">\n                    <h4>My Experience</h4>\n                    <p>The quests of Fitz Chivalry, from royal bastard to assassin's apprentice</p>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default AboutCard;","// USERACTIONS - PROFILE\nimport React, { useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { AuthContext } from \"../../../App\";\nimport './style.css';\n\nconst UserActions = () => {\n\n    // AuthContext using reducer\n    const { state, dispatch } = useContext(AuthContext);\n\n    if (!state.isLoggedIn) {\n        return <Redirect to=\"/\" />;\n    }\n\n    const handleLogout = () => {\n        dispatch({\n            type: \"LOGOUT\"\n        });\n    }\n\n    return (\n        <div className=\"card profCard actions container\">\n            <h2 className=\"d-flex justify-content-center\">Settings</h2>\n            <div className=\"row justify-content-around my-2\">\n\n                {/* Edit Profile function doesn't exist yet */}\n                <Button className=\"settingBtn\">\n                    <i className=\"fas fa-sliders-h\"></i>\n                </Button>\n\n                <Button className=\"settingBtn\" onClick={() => handleLogout()}>\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                </Button>\n\n\n            </div>\n        </div>\n    )\n};\n\nexport default UserActions;","// PROFILE PAGE\nimport React from \"react\";\n// import React, { createContext, useReducer} from \"react\";\nimport NavBar from \"../NavBar\";\nimport UserCard from \"./UserCard\";\nimport SocialCard from \"./SocialCard\";\nimport AboutCard from \"./AboutCard\";\nimport UserActions from \"./UserActions\";\n// import PostsCard from \"./PostsCard\";\nimport \"./style.css\";\n\n\nconst Profile = () => {\n  return (\n    <div className=\"profContainer\">\n      <NavBar />\n      <div className=\"cardContainer\">\n        <UserCard />\n        <SocialCard />\n        {/* To Do <PostsCard /> */}\n        <AboutCard />\n        <UserActions />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import axios from 'axios';\nimport { GET_PROFILE, LOAD_PROFILE, GET_POSTS, LOADING_POSTS, FOLLOW, UNFOLLOW } from '../../constants';\n\nexport const getUserProfile = (userId) => dispatch => {\n    dispatch(loadProfile())\n    axios.get(`/api/users/${userId}`)\n        .then(res => dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        }))\n        .catch(err => console.log(err))\n}\n\nexport const refreshUserProfile = (userId) => dispatch => {\n\n    axios.get(`/api/users/${userId}`)\n        .then(res => dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        }))\n        .catch(err => console.log(err))\n}\n\nexport const getPostsByUserId = (userId) => dispatch => {\n    dispatch(loadPosts())\n    axios.get(`/api/posts/${userId}`)\n        .then( res => dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        }))\n        .catch(err => console.log(err))\n}\n\nexport const followUser = (userId) => dispatch => {\n    axios.post('/api/users/follow', { userId })\n        .then(res => dispatch({\n            type: FOLLOW,\n            payload: res.data\n        }))\n        .catch(err => console.log(err))\n}\n\nexport const unfollowUser = (userId) => dispatch => {\n    axios.post('/api/users/unfollow', { userId })\n        .then(res => dispatch({\n            type: UNFOLLOW,\n            payload: res.data\n        }))\n        .catch(err => console.log(err))\n}\n\nexport const loadProfile = () => {\n    return {\n        type: LOAD_PROFILE\n    }\n}\n\nexport const loadPosts = () => {\n    return {\n        type: LOADING_POSTS\n    }\n}","import React, { ComponentElement, Component } from \"react\";\n// import API from \"../../utils/API\";\nimport Card from \"react-bootstrap/Card\"\nimport NavBar from \"../NavBar\";\n\nimport { Link } from 'react-router-dom'\n// import AddPost from \"./AddPost\"\n// import { connect } from 'react-redux';\n// import { getPosts} from \"../../actions/postActions/postActions\"\n\nclass Post extends Component {\n  render() {\n    const { classes, post } = this.props\n\n    // const items = list && list.map( )\n\n    // console.log(classes)\n\n\n\n    return (\n      <Card>\n        <div> \n        </div>\n\n        <div> {post.user.fullname}\n          <h3> \n\n            {/* david check this out  */}\n            <Link to={`/reduxProfile/${post.user.id}`}> {post.user.fullname} </Link>\n            <span> {new Date(post.createdAt).toLocaleString()} </span>\n          </h3>\n          {post.text}\n\n        </div>\n      </Card>\n    )\n  }\n}\n\n\n\nexport default (Post);","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst LoadingPosts = ({ classes }) => (\n  <div>\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nexport default (LoadingPosts)","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\n// connect this with export default at bottom\nimport {\n  getPostsByUserId,\n  getUserProfile,\n  unfollowUser,\n  followUser,\n  refreshUserProfile\n} from \"../../actions/profileActions/profileActions\";\n\nimport NavBar from \"../NavBar\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\n// example of how we can reuse components\nimport AboutCard from \"../Profile/AboutCard\";\n\nimport Post from \"../posts/Post\";\n\nimport LoadingPosts from \"../posts/LoadingPosts\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFollow = this.handleFollow.bind(this);\n    this.handleUnfollow = this.handleUnfollow.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getPostsByUserId(this.props.match.params.userId);\n    this.props.getUserProfile(this.props.match.params.userId);\n  }\n\n  // do this for signup and login if you can.\n  componentDidUpdate(prevProps) {\n    if (this.props.auth.isAuthenticated) {\n      // if we changed the following prop,\n      if (\n        prevProps.user &&\n        prevProps.user.following !== this.props.user.following\n      ) {\n        // refresh the page\n        this.props.refreshUserProfile(this.props.match.params.userId);\n      }\n    }\n  }\n\n  handleFollow() {\n    this.props.followUser(this.props.match.params.userId);\n  }\n\n  handleUnfollow() {\n    this.props.unfollowUser(this.props.match.params.userId);\n  }\n\n  render() {\n    const {\n      classes,\n      loadingPosts,\n      loadingProfile,\n      list,\n      auth,\n      user,\n      profile\n    } = this.props;\n\n    const items = list && list.map(el => <Post key={el._id} post={el} />);\n\n    let profileInfo;\n\n    let newprofileinfo;\n\n    let followButtons;\n\n    // if if authenticated, \n    if (auth.isAuthenticated) {\n      // if user exist, user has a following array\n      if (\n        user &&\n        user.following &&\n        // if you aren't following this person, show follow, else show unfollow\n        user.following.indexOf(this.props.match.params.userId) === -1\n        ) {\n        followButtons = (\n          <div>\n            <Button onClick={this.handleFollow}>Follow</Button>\n          </div>\n        );\n      } else {\n        followButtons = (\n          <div>\n            <Button onClick={this.handleUnfollow}>Unfollow</Button>\n          </div>\n        );\n      }\n    }\n    /// can you do all the css in here?\n    if (profile && items) {\n      profileInfo = (\n        <Card className={classes}>\n          <h1> {profile.fullname} </h1>\n          <div> {profile.email} </div>\n          <div>\n            <div>\n              {items.length}\n              <span> posts </span>\n            </div>\n            <div>\n              {profile.followers.length}\n              <span> followers </span>\n            </div>\n            <div>\n              {profile.following.length}\n              <span> following </span>\n            </div>\n\n            {followButtons}\n          </div>\n        </Card>\n      );\n    }\n\n    return (\n      <div>\n        <AboutCard />\n\n        {loadingProfile ? <div>Loading</div> : profileInfo}\n        {loadingPosts ? <LoadingPosts /> : items}\n\n        <NavBar />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loadingPosts: state.post.loading,\n  list: state.post.list,\n  profile: state.profile.user,\n  loadingProfile: state.profile.loading,\n  auth: state.auth,\n  user: state.auth.user\n});\n\n//everything from actions\nexport default connect(mapStateToProps, {\n  getPostsByUserId,\n  getUserProfile,\n  unfollowUser,\n  followUser,\n  refreshUserProfile\n})(Profile);","import axios from 'axios';\nimport {\n    ADD_POST,\n    GET_POSTS,\n    LOADING_POSTS\n} from \"../../constants\"\n\nexport const addPost = postData => dispatch => {\n    axios.post('/api/posts/add', postData)\n        .then(res => dispatch({\n            type: ADD_POST,\n            payload: res.data\n        }))\n        .catch(err => console.log(err))\n}\n\nexport const getPosts = () => dispatch => {\n    dispatch(loadPosts)\n    axios.get('/api/posts/')\n        .then(res => dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        }))\n        .catch(err => console.log(err))\n}\n\nexport const loadPosts = () => {\n    return {\n        type: LOADING_POSTS\n    }\n}","import React, { Component } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { connect } from 'react-redux'\n\nimport { addPost }from \"../../actions/postActions/postActions\"\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      text: \"\"\n    }\n    \n    this.handleTweetChange = this.handleTweetChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n  \n  handleTweetChange(event) {\n    this.setState({ text: event.target.value });\n  }\n  \n  handleSubmit(e) {\n    e.preventDefault();\n    \n    const postData = {\n      text: this.state.text\n    };\n    \n    console.log(postData)\n\n    this.props.addPost(postData);\n    \n    this.setState({ text: \"\" });\n  }\n  \n  \n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Form.Group>\n          <Form.Control\n            label=\"What's new?\"\n            as=\"textarea\"\n            rows=\"3\"\n            onChange={this.handleTweetChange}\n            value={this.state.text}\n            ></Form.Control>\n        </Form.Group>\n\n        <Button onClick={this.handleSubmit}>Send Tweet</Button>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {addPost} ) (AddPost)","import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\n\nimport NavBar from \"../NavBar\"\nimport AddPost from \"./AddPost\";\nimport Post from \"./Post\"\n\nimport { getPosts } from \"../../actions/postActions/postActions\"\nimport LoadingPosts from \"./LoadingPosts\"\n\n\nclass ListPost extends Component { \n\n    componentDidMount() {\n        this.props.getPosts(); \n    }\n\n    render() {\n        const { list, loading } = this.props; \n\n\n        const items = list && list.map(el => <Post key={el._id} post={el} />)\n        return ( \n            <div>\n                <AddPost />\n                List Post Page\n                { loading ? <LoadingPosts /> : items}\n                <NavBar/>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    list: state.post.list,\n    loading: state.post.loading,\n\n})\n\nexport default connect(mapStateToProps, { getPosts}) (ListPost);","import React, { Component } from \"react\";\nimport NavBar from \"../NavBar\";\n\nclass notFound extends Component {\n  render() {\n    return (\n      <div>\n        Sorry we couldn't find that page Here's a picture of a dog instead\n        <div>\n          <img src=\"\" alt=\"insert cute puppy here :) \"></img>\n        </div>\n\n        <NavBar />\n      </div>\n    );\n  }\n}\n\nexport default notFound;\n","import React, { createContext, useReducer } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage\";\nimport GitHubLogin from \"./components/GitHubLogin\";\n// Chat\nimport Chat from \"./components/chatrooms/Chat/index.js\";\nimport Join from \"./components/chatrooms/Chat/index\";\n\n// Reducer store for AuthContext (Logins)\nimport { initialState, reducer } from \"./store/reducer\";\nimport { logoutUser, getCurrentUser } from \"./actions/authActions/authActions\";\n\nimport jwt_decode from \"jwt-decode\";\n\nimport setHeaderAuth from \"./utils/setAuthHeader\";\n\n//refactoring into redux (combining reducers)\nimport store from \"./store\";\n\n// cant find how to separate it, might end up with huge reducer index.js\n// import { profileState, profileReducer } from \"./store/reducer/profileReducer\";\n\n// NEW Refactored Profilepage branch to React\nimport Profile from \"./components/Profile\";\n\n// redux profile testing - eric\nimport reduxProfile from \"./components/reduxProfile/Profile\"\n\n// Timeline stuff, coming soon\nimport ListPost from \"./components/posts/ListPost\";\n\n// utility components \nimport notFound from \"./components/UtilityComponents/notFound\"\n\n// Eventually we'll have a logo\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nexport const AuthContext = createContext();\n\n// if theres a token in the storage, check how long its been up, log them out if its past expiration date that we set in the passport strategy\nif (localStorage.getItem(\"jwToken\")) {\n  const currentTime = Date.now() / 1000;\n  const decode = jwt_decode(localStorage.getItem(\"jwToken\"));\n\n  if (currentTime > decode.exp) {\n    store.dispatch(logoutUser());\n  } else {\n    setHeaderAuth(localStorage.getItem(\"jwToken\"));\n    store.dispatch(getCurrentUser());\n  }\n}\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <AuthContext.Provider\n          value={{\n            state,\n            dispatch\n          }}\n        >\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/\" exact component={LandingPage} />\n\n              {/* IMPORTANT - for now GH must be at /login,\n            hopefully Google can be at a different path */}\n              <Route path=\"/githublogin\" exact component={GitHubLogin} />\n\n              {/* Soon */}\n              {/* <Route path=\"/googlelogin\" exact component={GoogleLogin} /> */}\n\n              {/* NEW Profile Page */}\n\n              <Route path=\"/profile/:id\" exact component={Profile} />\n              <Route path=\"/reduxProfile/:userId\" component={ reduxProfile } />\n\n              {/* no content yet */}\n              <Route path=\"/Posts\" component={ListPost} />\n\n\n              {/* Join goes to Chat. Join is temporary until DMs exist */}\n              <Route path=\"/join\" exact component={Join} />\n              <Route path=\"/chat\" exact component={Chat} />\n\n              <Route component={notFound} />\n            </Switch>\n          </BrowserRouter>\n        </AuthContext.Provider>\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}